AWSTemplateFormatVersion: 2010-09-09
Transform: "AWS::Serverless-2016-10-31"
Description: Lambda functions using Cloud formation


Resources:
#Lambda Role with policies for function IndexPhotosLambda
  IndexPhotosRole:
            Type: "AWS::IAM::Role"
            Properties:
              AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Principal:
                      Service:
                        - lambda.amazonaws.com
                    Action:
                      - "sts:AssumeRole"
              Description: "The execution role for the lambda function index-photos."
              Path: "/"
              ManagedPolicyArns:
                - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                - "arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess"
                - "arn:aws:iam::aws:policy/AmazonRekognitionFullAccess"
                - "arn:aws:iam::aws:policy/service-role/AmazonRekognitionServiceRole"
                - "arn:aws:iam::aws:policy/AmazonRekognitionCustomLabelsFullAccess"
                - "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"
              Policies:
                - PolicyName: "LambdaPolicy"
                  PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                      - Effect: Allow
                        Action:
                          - s3:GetObject
                        Resource: "arn:aws:s3:::photostore-rv2"
                      - Effect: Allow
                        Action:
                          - rekognition:DetectLabels
                        Resource: "*"
                      - Effect: Allow
                        Action:
                          - es:ESHttpPut
                          - es:ESHttpPost
                        Resource: "*"

              RoleName: "IndexPhotosRole"


# Lambda Role with policies for function SearchPhotosLambda
  SearchPhotosRole:
          Type: "AWS::IAM::Role"
          Properties:
            AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Principal:
                    Service:
                      - lambda.amazonaws.com
                  Action:
                    - "sts:AssumeRole"
            Description: "The execution role for the lambda function search-photos."
            Path: "/"
            ManagedPolicyArns:
              - "arn:aws:iam::aws:policy/AmazonLexFullAccess"
              - "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"
            Policies:
              - PolicyName: "LambdaPolicy"
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                  - Effect: Allow
                    Action: logs:CreateLogGroup
                    Resource: arn:aws:logs:us-east-1:978364673633:*
                  - Effect: Allow
                    Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Resource:
                    - arn:aws:logs:us-east-1:978364673633:log-group:/aws/lambda/search-photos:*
        
            RoleName: "SearchPhotosRole"
  
#Lambda function for index photos
  IndexPhotosLambda:
      Type: AWS::Lambda::Function
      Properties:
          Code:
              S3Bucket: 'cloudformation-lexlambda-ansh'
              S3Key: 'index-photos/lambda_function.zip'
          Handler: lambda_function.lambda_handler
          Role: !GetAtt IndexPhotosRole.Arn
          Runtime: python3.7
          FunctionName: index-photos
          Timeout: 300
          TracingConfig:
              Mode: Active

#Lambda function for search photos
  SearchPhotosLambda:
    Type: AWS::Lambda::Function
    Properties:
        Code:
            S3Bucket: 'cloudformation-lexlambda-ansh'
            S3Key: 'search-photos/lambda_function.zip'
        Handler: lambda_function.lambda_handler
        Role: !GetAtt SearchPhotosRole.Arn
        Runtime: python3.7
        FunctionName: search-photos
        Timeout: 300
        TracingConfig:
            Mode: Active

  # LambdaExecutionRoleLF1:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #           Action:
  #             - "sts:AssumeRole"
  #     Description: "The execution role for the lambda LF1."
  #     Path: "/"
  #     ManagedPolicyArns:
  #       - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  #       - "arn:aws:iam::aws:policy/AmazonLexFullAccess"
  #       - "arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess"
  #       - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
  #     Policies:
  #       - PolicyName: "LambdaLF1Policy"
  #         PolicyDocument:
  #           Version: "2012-10-17"
  #           Statement:
  #             - Effect: Allow
  #               Action:
  #                 - s3:GetObject
  #               Resource: "arn:aws:s3:::photosalbumb21"
  #             - Effect: Allow
  #               Action:
  #                 - rekognition:DetectLabels
  #               Resource: "*"
  #             - Effect: Allow
  #               Action:
  #                 - es:ESHttpPut
  #                 - es:ESHttpPost
  #               Resource: "*"
  #     RoleName: "LambdaExecutionRoleLF1"

  # IndexPhotosLF1:
  #   Type: "AWS::Serverless::Function"
  #   Properties:
  #     # DependsOn: LambdaExecutionRoleLF1
  #     FunctionName: IndexPhotosLF1
  #     Handler: lambda_function.lambda_handler
  #     Runtime: python3.7
  #     CodeUri: s3://cloudformation-lexlambda-ansh/index-photos/lambda_function.zip
  #     Description: LF1
  #     MemorySize: 128
  #     Timeout: 30
  #     Role: !GetAtt LambdaExecutionRoleLF1.Arn
  #     Environment:
  #       Variables:
  #         Region: us-east-1
  #     Layers:
  #     - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p38-requests:7
  #     - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p38-opensearch-py:6
  #     Events:
  #       S3Event:
  #         Type: S3
  #         Properties:
  #           Bucket: !Ref photosalbumb21
  #           Events: s3:ObjectCreated:Put

  # SearchPhotosLF2:
  #   Type: "AWS::Serverless::Function"
  #   Properties:
  #     FunctionName: SearchPhotosLF2
  #     Handler: lambda_function.lambda_handler
  #     Runtime: python3.7
  #     CodeUri: s3://cloudformation-lexlambda-ansh/search-photos/lambda_function.zip
  #     Description: LF2
  #     MemorySize: 128
  #     Timeout: 30
  #     Role: !GetAtt LambdaExecutionRoleLF1.Arn
  #     Layers:
  #     - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p38-requests:7
  #     - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p38-opensearch-py:6
  #     - arn:aws:lambda:us-east-1:646268851640:layer:inflect-layer:1
  #     Environment:
  #       Variables:
  #         Region: us-east-1
